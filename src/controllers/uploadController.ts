import { IncomingMessage, ServerResponse } from 'http';
import Busboy from 'busboy';
import fs from 'fs';
import path from 'path';
import { ensureUploadsDir } from 'src/utils/ensureUploadsDir';

export const uploadController = (req: IncomingMessage, res: ServerResponse): void => {
  const busboy = Busboy({ headers: req.headers }); // üëà —Å—Ç—Ä–æ–≥–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω

  const uploadPath: string = ensureUploadsDir();
  let fileSaved = false;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
  busboy.on(
    'file', (name, file, {filename}) => {
        if (!filename) {
            file.resume(); // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç –∏–º–µ–Ω–∏
            return;
        }
      const saveTo = path.join(uploadPath, filename);
      const writeStream = fs.createWriteStream(saveTo);

      file.pipe(writeStream);

      file.on('end', () => {
        console.log(`‚úÖ –§–∞–π–ª ${name} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω`);
        fileSaved = true;
      });

      file.on('error', (err) => {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:`, err);
      });
    }
  );

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  busboy.on('finish', () => {
    res.writeHead(200, { 'Content-Type': 'text/plain; charset=utf-8' });
    res.end(fileSaved ? '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞' : '–§–∞–π–ª –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω');
  });

  // –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞
  busboy.on('error', (err: Error) => {
    res.writeHead(500, { 'Content-Type': 'text/plain; charset=utf-8' });
    res.end(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: ${err.message}`);
  });

  req.pipe(busboy);
};
